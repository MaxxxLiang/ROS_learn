<launch>
    <arg name="first_car" default="car1" />
    <arg name="second_car" default="car2" />
    <arg name="first_car_pos" default="-x 1.0 -y 0.0 -z 0.0"/>
    <arg name="second_car_pos" default="-x 0.0 -y 1.0 -z 0.0"/>
    
    <!-- 2.启动Gazebo仿真环境-->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find urdf02_gazebo)/worlds/box_house.world" />
    </include>
    <group ns="car1">
        <!-- 1.需要在参数服务器中载入urdf-->
        <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find urdf02_gazebo)/urdf/car.urdf.xacro'" />


        <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />

        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen">
            <param name="publish_frequency" type="double" value="50.0" />
            <!-- <param name="tf_prefix" value="$(arg first_car)" /> -->
        </node>

        <!-- 3.在Gazebo中添加机器人模型-->
        <node pkg="gazebo_ros" type="spawn_model" name="spawn_model" respawn="false" output="screen" args="-urdf -model $(arg first_car) $(arg first_car_pos) -param robot_description" />
    </group>
    <group ns="car2">
        <!-- 1.需要在参数服务器中载入urdf-->
        <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find urdf02_gazebo)/urdf/car.urdf.xacro'" />


        <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />

        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen">
            <param name="publish_frequency" type="double" value="50.0" />
            <!-- <param name="tf_prefix" value="$(arg second_car)" /> -->
        </node>

        <!-- 3.在Gazebo中添加机器人模型-->
        <node pkg="gazebo_ros" type="spawn_model" name="spawn_model" respawn="false" output="screen" args="-urdf -model $(arg second_car) $(arg second_car_pos) -param robot_description" />
    </group>

</launch>